apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-registry-kafka
  namespace: debezium
  labels:
    application: schema-registry-kafka
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  replicas: 1
  selector:
    matchLabels:
      application: schema-registry-kafka
  template:
    metadata:
      labels:
        application: schema-registry-kafka

    spec:
      volumes:
        - name: kafka-certs
          projected:
            defaultMode: 256
            sources:
              - secret:
                  name: kafka-tls-secret

      containers:
        - name: schema-registry-kafka
          image: confluentinc/cp-schema-registry:7.0.1
          env:
            - name: SCHEMA_REGISTRY_HOST_NAME
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP

            - name: SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_TYPE
              value: "PEM"
            - name: SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_CERTIFICATES
              valueFrom:
                secretKeyRef:
                  name: kafka-tls-secret
                  key: kafka-ca.crt
            - name: SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_CERTIFICATES
              valueFrom:
                secretKeyRef:
                  name: kafka-tls-secret
                  key: kafka.crt

          envFrom:
            - configMapRef:
                name: schema-registry
   
          ports:
            - containerPort: 8081

          livenessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 300
            periodSeconds: 30
            timeoutSeconds: 240
            successThreshold: 1
            failureThreshold: 6

          readinessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 6

          # resources:
          #   requests:
          #     memory: "250Mi"
          #     cpu: "200m"
          #   limits:
          #     memory: "250Mi"
          #     cpu: "200m"
